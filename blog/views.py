from django.conf import settings
from django.contrib import messages
from django.core.mail import send_mail
from django.db.models import F
from django.shortcuts import get_object_or_404, redirect
from django.urls import reverse_lazy
from django.views.generic import (
    CreateView,
    DeleteView,
    DetailView,
    ListView,
    UpdateView,
)

from .forms import BlogPostForm
from .models import BlogPost


class BlogPostListView(ListView):
    model = BlogPost
    template_name = "blog/post_list.html"
    context_object_name = "posts"
    paginate_by = 6

    def get_queryset(self):
        """–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
        return BlogPost.objects.filter(is_published=True).order_by("-created_at")


def send_congratulation_email(blog_post):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"""
    if blog_post.views_count == 100:
        subject = f'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ! –ó–∞–ø–∏—Å—å "{blog_post.title}" –¥–æ—Å—Ç–∏–≥–ª–∞ 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤!'

        message = f"""
        –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞–ø–∏—Å—å –≤ –±–ª–æ–≥–µ –¥–æ—Å—Ç–∏–≥–ª–∞ –∑–Ω–∞—á–∏–º–æ–≥–æ —Ä—É–±–µ–∂–∞!

        –î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏:
        - –ó–∞–≥–æ–ª–æ–≤–æ–∫: {blog_post.title}
        - –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {blog_post.views_count}
        - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {blog_post.created_at.strftime('%d.%m.%Y %H:%M')}
        - –°—Å—ã–ª–∫–∞: http://127.0.0.1:8000{blog_post.get_absolute_url()}

        –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üöÄ
        """

        try:
            send_mail(
                subject=subject,
                message=message,
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[settings.ADMIN_EMAIL],
                fail_silently=False,
            )
            print(f"‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏: {blog_post.title}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
            print("üí° –°–æ–≤–µ—Ç: –ü—Ä–æ–≤–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EMAIL_* –≤ settings.py")


class BlogPostDetailView(DetailView):
    model = BlogPost
    template_name = "blog/post_detail.html"
    context_object_name = "post"
    slug_url_kwarg = "slug"

    def get_object(self, queryset=None):
        """–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"""
        obj = super().get_object(queryset)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
        old_views_count = obj.views_count

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∞—Ç–æ–º–∞—Ä–Ω–æ
        BlogPost.objects.filter(pk=obj.pk).update(views_count=F("views_count") + 1)

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞
        obj.refresh_from_db()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã 100 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        if old_views_count == 99 and obj.views_count == 100:
            send_congratulation_email(obj)

        return obj


class BlogPostCreateView(CreateView):
    model = BlogPost
    form_class = BlogPostForm
    template_name = "blog/post_form.html"

    def form_valid(self, form):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
        messages.success(self.request, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        return super().form_valid(form)

    def get_success_url(self):
        """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é"""
        return reverse_lazy("blog:post_detail", kwargs={"slug": self.object.slug})


class BlogPostUpdateView(UpdateView):
    model = BlogPost
    form_class = BlogPostForm
    template_name = "blog/post_form.html"
    slug_url_kwarg = "slug"

    def form_valid(self, form):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
        messages.success(self.request, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        return super().form_valid(form)

    def get_success_url(self):
        """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é"""
        return reverse_lazy("blog:post_detail", kwargs={"slug": self.object.slug})


class BlogPostDeleteView(DeleteView):
    model = BlogPost
    template_name = "blog/post_confirm_delete.html"
    slug_url_kwarg = "slug"
    success_url = reverse_lazy("blog:post_list")

    def delete(self, request, *args, **kwargs):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
        messages.success(self.request, "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        return super().delete(request, *args, **kwargs)


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è staff)
class BlogPostManageListView(ListView):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π (–≤–∫–ª—é—á–∞—è –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ) –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""

    model = BlogPost
    template_name = "blog/post_manage_list.html"
    context_object_name = "posts"
    paginate_by = 10

    def get_queryset(self):
        """–í—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
        return BlogPost.objects.all().order_by("-created_at")

    def dispatch(self, request, *args, **kwargs):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
        if not request.user.is_staff:
            messages.error(request, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
            return redirect("blog:post_list")
        return super().dispatch(request, *args, **kwargs)
